/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 861768
 */
public class AddEmployeeScreen extends javax.swing.JFrame {

    private MyHashTable hashTable;
    
    public AddEmployeeScreen() {
        initComponents();
        
        
        
        //Buffered Writer Stuff 
    }
    
    public void setHashTable(MyHashTable table)
    {
        hashTable = table;
    }
    
    public MyHashTable getHashTable()
    {
        return(hashTable);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        employeeTypeButtonGroup = new javax.swing.ButtonGroup();
        genderButtonGroup = new javax.swing.ButtonGroup();
        titleLabel = new javax.swing.JLabel();
        instructionsLabel = new javax.swing.JLabel();
        partTimeEmployeeButton = new javax.swing.JRadioButton();
        fullTimeEmployeeButton = new javax.swing.JRadioButton();
        employeeNumberLabel = new javax.swing.JLabel();
        firstNameLabel = new javax.swing.JLabel();
        lastNameLabel = new javax.swing.JLabel();
        genderLabel = new javax.swing.JLabel();
        workLocationLabel = new javax.swing.JLabel();
        deductionRateLabel = new javax.swing.JLabel();
        annualSalaryLabel = new javax.swing.JLabel();
        fullTimeEmployeeInfoLabel = new javax.swing.JLabel();
        partTimeEmployeeInfoLabel = new javax.swing.JLabel();
        hourlyWageLabel = new javax.swing.JLabel();
        hoursPerWeekLabel = new javax.swing.JLabel();
        weeksPerYearLabel = new javax.swing.JLabel();
        addEmployeeButton = new javax.swing.JButton();
        employeeNumberInput = new javax.swing.JTextField();
        firstNameInput = new javax.swing.JTextField();
        lastNameInput = new javax.swing.JTextField();
        workLocationInput = new javax.swing.JTextField();
        deductionRateInput = new javax.swing.JTextField();
        annualSalaryInput = new javax.swing.JTextField();
        hourlyWageInput = new javax.swing.JTextField();
        hoursPerWeekInput = new javax.swing.JTextField();
        weeksPerYearInput = new javax.swing.JTextField();
        maleRadioButton = new javax.swing.JRadioButton();
        femaleRadioButton = new javax.swing.JRadioButton();
        otherGenderRadioButton = new javax.swing.JRadioButton();
        saveButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        titleLabel.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        titleLabel.setText("Add Employee");

        instructionsLabel.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        instructionsLabel.setText("Please input information to add an Employee into the system.");

        employeeTypeButtonGroup.add(partTimeEmployeeButton);
        partTimeEmployeeButton.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        partTimeEmployeeButton.setText("Part Time Employee");

        employeeTypeButtonGroup.add(fullTimeEmployeeButton);
        fullTimeEmployeeButton.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        fullTimeEmployeeButton.setText("Full Time Employee");

        employeeNumberLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        employeeNumberLabel.setText("Employee Number: ");

        firstNameLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        firstNameLabel.setText("First Name: ");

        lastNameLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lastNameLabel.setText("Last Name:");

        genderLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        genderLabel.setText("Gender: ");
        
        workLocationLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        workLocationLabel.setText("Work Location: ");

        deductionRateLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        deductionRateLabel.setText("Deduction Rate: ");

        annualSalaryLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        annualSalaryLabel.setText("Annual Salary:");

        fullTimeEmployeeInfoLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        fullTimeEmployeeInfoLabel.setText("Full Time Employee Information:");

        partTimeEmployeeInfoLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        partTimeEmployeeInfoLabel.setText("Part Time Employee Information:");

        hourlyWageLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        hourlyWageLabel.setText("Hourly Wage:");

        hoursPerWeekLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        hoursPerWeekLabel.setText("Hours Per Week:");

        weeksPerYearLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        weeksPerYearLabel.setText("Weeks Per Year:");

        addEmployeeButton.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        addEmployeeButton.setText("ADD EMPLOYEE");
        addEmployeeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEmployeeButtonActionPerformed(evt);
            }
        });

        employeeNumberInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeNumberInputActionPerformed(evt);
            }
        });

        genderButtonGroup.add(maleRadioButton);
        maleRadioButton.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        maleRadioButton.setText("Male");
        maleRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleRadioButtonActionPerformed(evt);
            }
        });

        genderButtonGroup.add(femaleRadioButton);
        femaleRadioButton.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        femaleRadioButton.setText("Female");

        genderButtonGroup.add(otherGenderRadioButton);
        otherGenderRadioButton.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        otherGenderRadioButton.setText("Other");

        saveButton.setText("SAVE");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(instructionsLabel)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(annualSalaryLabel)
                                    .addGap(33, 33, 33)
                                    .addComponent(annualSalaryInput, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(partTimeEmployeeButton)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(employeeNumberLabel)
                                            .addComponent(firstNameLabel)
                                            .addComponent(lastNameLabel)
                                            .addComponent(genderLabel)
                                            .addComponent(workLocationLabel)
                                            .addComponent(deductionRateLabel))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(employeeNumberInput)
                                            .addComponent(firstNameInput)
                                            .addComponent(lastNameInput)
                                            .addComponent(workLocationInput)
                                            .addComponent(deductionRateInput, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(maleRadioButton)
                                                .addGap(34, 34, 34)
                                                .addComponent(femaleRadioButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(otherGenderRadioButton))))
                                    .addComponent(fullTimeEmployeeButton)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(titleLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(saveButton))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(partTimeEmployeeInfoLabel)
                                    .addComponent(fullTimeEmployeeInfoLabel)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(hourlyWageLabel)
                                    .addComponent(hoursPerWeekLabel)
                                    .addComponent(weeksPerYearLabel))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(hourlyWageInput, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(hoursPerWeekInput, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(weeksPerYearInput, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 39, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(addEmployeeButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(titleLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(saveButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(instructionsLabel)
                .addGap(18, 18, 18)
                .addComponent(fullTimeEmployeeButton)
                .addGap(11, 11, 11)
                .addComponent(partTimeEmployeeButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(employeeNumberLabel)
                    .addComponent(employeeNumberInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameLabel)
                    .addComponent(firstNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameLabel)
                    .addComponent(lastNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(genderLabel)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(maleRadioButton)
                        .addComponent(femaleRadioButton)
                        .addComponent(otherGenderRadioButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(workLocationInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(workLocationLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deductionRateLabel)
                    .addComponent(deductionRateInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(fullTimeEmployeeInfoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(annualSalaryLabel)
                    .addComponent(annualSalaryInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(partTimeEmployeeInfoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hourlyWageLabel)
                    .addComponent(hourlyWageInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hoursPerWeekLabel)
                    .addComponent(hoursPerWeekInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(weeksPerYearLabel)
                    .addComponent(weeksPerYearInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addEmployeeButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addEmployeeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEmployeeButtonActionPerformed

        //Stopping the rest of this from running if they do nto add enougn information
        try{
            int employeeNumber = Integer.valueOf(employeeNumberInput.getText());
            String firstName = firstNameInput.getText();
            String lastName = lastNameInput.getText();
            String workLocation = workLocationInput.getText();
            double deductionRate = Double.valueOf(deductionRateInput.getText());    
        }
        catch(Exception ex ){
            employeeNumberInput.setText("Please input a valid value.");
            firstNameInput.setText("Please input a valid value.");
            lastNameInput.setText("Please input a valid value.");
            workLocationInput.setText("Please input a valid value.");
            deductionRateInput.setText("Please input a valid value.");
            return;
        }
    
        
        // Actually accepting the values and using them
        int employeeNumber = Integer.valueOf(employeeNumberInput.getText());
        String firstName = firstNameInput.getText();
        String lastName = lastNameInput.getText();
        String workLocation = workLocationInput.getText();
        double deductionRate = Double.valueOf(deductionRateInput.getText());
        
        
        //Changing the string of the Work Location Accepted into a number
        // Default = 0, Toronto = 1, Mississauga = 2
        int work = 0;
        if (workLocation.equals("Toronto")){
            work = 1;
        }

        else if (workLocation.equals("Mississauga")){
            work = 2;
        }
        
        else if (workLocation.equals("New York")){
            work = 3;
        }
           
        // Getting the Gender from the user using Radio Buttons
        // male = 0, female = 1, other = 2, default is 3
        int gender = 3;
        if (maleRadioButton.isSelected()){
            gender = 0;
        }
        
        if (femaleRadioButton.isSelected()){
            gender = 1;
        }    
        
        if (otherGenderRadioButton.isSelected()){
            gender = 2;
        }
    
        
       //Part Time or Full Time Employee Radio Button
       if (fullTimeEmployeeButton.isSelected()) {
            // FTE
            
            //Gathering information specific to Full Time Employee
            try{
                double annualSalary = Double.valueOf(annualSalaryInput.getText());
            }
            catch(Exception e)
            {
                annualSalaryInput.setText("Please input a valid value.");
                return;
            }
            
            double annualSalary = Double.valueOf(annualSalaryInput.getText());
            
            FullTimeEmployee employee = new FullTimeEmployee(employeeNumber, firstName, lastName, work, gender, deductionRate, annualSalary);
            hashTable.addEmployee(employee);
            
            
            employeeNumberInput.setText("");
            firstNameInput.setText("");
            lastNameInput.setText("");
            workLocationInput.setText("");
            deductionRateInput.setText("");
            annualSalaryInput.setText("");
            hourlyWageInput.setText("");
            hoursPerWeekInput.setText("");
            weeksPerYearInput.setText("");
            addEmployeeButton.setText("Employee Added!");
            
            System.out.println( employee + "\n" + employee.getEmployeeNumber() + "\n" + employee.getFirstName() + " " + employee.getLastName());
            
        }
        if (partTimeEmployeeButton.isSelected()) {
            // PTE
            
            //testing value from user
            try{
                double hourlyWage = Double.valueOf(hourlyWageInput.getText());
                double hoursPerWeek = Double.valueOf(hoursPerWeekInput.getText());
                double weeksPerYear = Double.valueOf(weeksPerYearInput.getText());
            }
            catch(Exception e)
            {
                hourlyWageInput.setText("Please input a valid value.");
                hoursPerWeekInput.setText("Please input a valid value.");
                weeksPerYearInput.setText("Please input a valid value.");
                return;
            }
            
            
            
            //Gathering information specific to part time Employee
            double hourlyWage = Double.valueOf(hourlyWageInput.getText());
            double hoursPerWeek = Double.valueOf(hoursPerWeekInput.getText());
            double weeksPerYear = Double.valueOf(weeksPerYearInput.getText());
        
        
            PartTimeEmployee employee = new PartTimeEmployee(employeeNumber, firstName, lastName, work, gender, deductionRate, hourlyWage, hoursPerWeek, weeksPerYear);
            hashTable.addEmployee(employee);
            
            employeeNumberInput.setText("");
            firstNameInput.setText("");
            lastNameInput.setText("");
            workLocationInput.setText("");
            deductionRateInput.setText("");
            annualSalaryInput.setText("");
            hourlyWageInput.setText("");
            hoursPerWeekInput.setText("");
            weeksPerYearInput.setText("");
            addEmployeeButton.setText("Employee Added!");
            
            System.out.println( employee + "\n" + employee.getEmployeeNumber() + "\n" + employee.getFirstName() + " " + employee.getLastName());
        }

        
        
    }//GEN-LAST:event_addEmployeeButtonActionPerformed

    private void maleRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maleRadioButtonActionPerformed

    private void employeeNumberInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeNumberInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_employeeNumberInputActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        
        if (saveButton.getText().equals("CONFIRM")){
            hashTable.saveToFile();
            saveButton.setText("SAVE");
            System.out.println("Saved to file.");
        }
        else if(saveButton.getText().equals("SAVE")){
            saveButton.setText("CONFIRM");
        }
        
                
    }//GEN-LAST:event_saveButtonActionPerformed
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddEmployeeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddEmployeeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddEmployeeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
    
        }
        //</editor-fold>

      
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddEmployeeScreen().setVisible(true);
            }
        });
        
    }


   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addEmployeeButton;
    private javax.swing.JTextField annualSalaryInput;
    private javax.swing.JLabel annualSalaryLabel;
    private javax.swing.JTextField deductionRateInput;
    private javax.swing.JLabel deductionRateLabel;
    private javax.swing.JTextField employeeNumberInput;
    private javax.swing.JLabel employeeNumberLabel;
    private javax.swing.ButtonGroup employeeTypeButtonGroup;
    private javax.swing.JRadioButton femaleRadioButton;
    private javax.swing.JTextField firstNameInput;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JRadioButton fullTimeEmployeeButton;
    private javax.swing.JLabel fullTimeEmployeeInfoLabel;
    private javax.swing.ButtonGroup genderButtonGroup;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JTextField hourlyWageInput;
    private javax.swing.JLabel hourlyWageLabel;
    private javax.swing.JTextField hoursPerWeekInput;
    private javax.swing.JLabel hoursPerWeekLabel;
    private javax.swing.JLabel instructionsLabel;
    private javax.swing.JTextField lastNameInput;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JRadioButton maleRadioButton;
    private javax.swing.JRadioButton otherGenderRadioButton;
    private javax.swing.JRadioButton partTimeEmployeeButton;
    private javax.swing.JLabel partTimeEmployeeInfoLabel;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField weeksPerYearInput;
    private javax.swing.JLabel weeksPerYearLabel;
    private javax.swing.JTextField workLocationInput;
    private javax.swing.JLabel workLocationLabel;
    // End of variables declaration//GEN-END:variables
}